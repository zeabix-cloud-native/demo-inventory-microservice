name: "ðŸ“š Copilot Agent Task - Documentation"
description: "Template for assigning documentation tasks to GitHub Copilot"
title: "[Copilot Docs] Document [Feature/Component Name]"
labels: ["copilot-task", "documentation", "needs-docs"]
body:
  - type: markdown
    attributes:
      value: |
        ## ðŸ¤– Copilot Agent Documentation Assignment
        
        **ðŸ“– Reference**: See `.github/copilot-instructions.md` for comprehensive project guidance, documentation standards, and style guidelines.

  - type: input
    id: documentation-target
    attributes:
      label: "Documentation Target"
      description: "What needs to be documented?"
      placeholder: "e.g., Product Search API, React Components, Deployment Process"
    validations:
      required: true

  - type: dropdown
    id: doc-type
    attributes:
      label: "Documentation Type"
      description: "What type of documentation is needed?"
      options:
        - "API Documentation"
        - "Code Documentation (XML/JSDoc)"
        - "Architecture Documentation"
        - "User Guide/Tutorial"
        - "Developer Guide"
        - "Deployment Guide"
        - "Troubleshooting Guide"
        - "README Updates"
        - "Contributing Guidelines"
        - "Testing Documentation"
    validations:
      required: true

  - type: dropdown
    id: target-audience
    attributes:
      label: "Target Audience"
      description: "Who is the primary audience for this documentation?"
      options:
        - "Developers (Internal Team)"
        - "API Consumers (External)"
        - "System Administrators"
        - "End Users"
        - "New Team Members"
        - "DevOps Engineers"
        - "QA Engineers"
        - "Technical Writers"
        - "Project Stakeholders"
    validations:
      required: true

  - type: textarea
    id: documentation-scope
    attributes:
      label: "Documentation Scope"
      description: "What specifically needs to be documented?"
      placeholder: |
        Define the scope:
        - API endpoints and their usage
        - Request/response formats and examples
        - Authentication requirements
        - Error codes and handling
        - Integration examples
        - Best practices
    validations:
      required: true

  - type: textarea
    id: existing-gaps
    attributes:
      label: "Current Documentation Gaps"
      description: "What's missing or inadequate in current documentation?"
      placeholder: |
        Current issues:
        - No API examples for complex operations
        - Missing error code documentation
        - Outdated installation instructions
        - No troubleshooting section
        - Missing architecture diagrams
    validations:
      required: true

  - type: textarea
    id: content-requirements
    attributes:
      label: "Content Requirements"
      description: "What specific content should be included?"
      placeholder: |
        Required content:
        - Step-by-step instructions
        - Code examples with explanations
        - Screenshots or diagrams (if applicable)
        - Common use cases
        - Troubleshooting tips
        - Best practices
    validations:
      required: true

  - type: textarea
    id: existing-files
    attributes:
      label: "Existing Documentation Files"
      description: "List existing documentation files that may need updates"
      placeholder: |
        Files to update or reference:
        - `README.md` - Main project overview
        - `docs/API.md` - API documentation
        - `docs/DEVELOPMENT.md` - Development guide
        - `backend/src/**/*.cs` - Code XML documentation
        - `frontend/src/**/*.tsx` - JSDoc comments

  - type: checkboxes
    id: quality-criteria
    attributes:
      label: "Quality Criteria"
      description: "What criteria should the documentation meet?"
      options:
        - label: "Clear and easy to understand"
        - label: "Comprehensive coverage of the topic"
        - label: "Includes practical, working examples"
        - label: "Follows project style guidelines"
        - label: "Properly formatted with consistent structure"
        - label: "Contains troubleshooting information"
        - label: "Examples are tested and working"

  - type: textarea
    id: additional-context
    attributes:
      label: "Additional Context"
      description: "Any other information relevant to this documentation task"
      placeholder: |
        Additional considerations:
        - Deadlines or timeline requirements
        - Related documentation projects
        - External documentation standards to follow
        - Translation requirements
        - Branding guidelines to follow

  - type: markdown
    attributes:
      value: |
        ---
        
        ## ðŸ“‹ For Copilot Agent
        
        1. **Know your audience** - Write for the specified target audience
        2. **Use examples liberally** - Include practical, working code examples
        3. **Test everything** - Ensure all code examples actually work
        4. **Be consistent** - Follow existing documentation patterns and style
        
        **ðŸ“– Full project guidance**: `.github/copilot-instructions.md` contains detailed documentation standards, style guidelines, and project-specific requirements.