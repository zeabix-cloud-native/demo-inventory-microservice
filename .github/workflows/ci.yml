name: CI Pipeline

on:
  push:
    branches: [ main, develop, 'release/*', 'hotfix/*' ]
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened, ready_for_review]

env:
  DOTNET_VERSION: '9.0.x'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --no-restore --configuration Release
      
    - name: Run xUnit tests
      run: dotnet test --no-build --configuration Release --verbosity normal --logger trx --logger junit --results-directory TestResults
      
    - name: Setup Node.js for CTRF conversion
      uses: actions/setup-node@v4
      with:
        node-version: '24'
      
    - name: Install CTRF tools
      run: npm install -g junit-to-ctrf ctrf
      
    - name: Convert xUnit results to CTRF
      run: |
        if ls TestResults/*.xml >/dev/null 2>&1; then
          junit-to-ctrf "TestResults/*.xml" -o TestResults/ctrf-unit-tests.json -t "xUnit Tests"
        else
          echo "No JUnit XML files found, creating empty CTRF report"
          mkdir -p TestResults
          echo '{"results":{"tool":{"name":"xUnit Tests"},"summary":{"tests":0,"passed":0,"failed":0,"skipped":0,"pending":0,"other":0},"tests":[]}}' > TestResults/ctrf-unit-tests.json
        fi
      
    - name: Upload Unit Test CTRF Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-ctrf-results
        path: TestResults/ctrf-unit-tests.json
      
    - name: Publish test results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: xUnit Test Results
        path: TestResults/*.trx
        reporter: dotnet-trx

  # Postman API tests - now enabled since collection files are available
  postman-tests:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: true  # Enabled now that Postman tests are ready
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        
    - name: Install Newman (Postman CLI)
      run: npm install -g newman newman-reporter-htmlextra newman-reporter-ctrf-json
      
    - name: Restore and build solution
      run: |
        dotnet restore
        dotnet build --no-restore --configuration Release
        
    - name: Start API server
      run: |
        dotnet run --project backend/src/DemoInventory.API --configuration Release &
        echo $! > api.pid
        sleep 15
        # API should be running on port 5126 for local environment
        curl -f http://localhost:5126/api/products
      
    - name: Run Postman tests
      run: |
        mkdir -p TestResults
        cd tests/postman
        ./run-newman.sh auto \
          --reporters cli,htmlextra,ctrf-json \
          --reporter-htmlextra-export ../../TestResults/postman-report.html \
          --reporter-ctrf-json-export ../../TestResults/ctrf-api-tests.json || true
        # Ensure CTRF file exists even if tests fail
        if [ ! -f ../../TestResults/ctrf-api-tests.json ]; then
          echo '{"results":{"tool":{"name":"newman"},"summary":{"tests":0,"passed":0,"failed":0,"skipped":0,"pending":0,"other":0},"tests":[]}}' > ../../TestResults/ctrf-api-tests.json
        fi
          
    - name: Stop API server
      if: always()
      run: |
        if [ -f api.pid ]; then
          kill $(cat api.pid) || true
        fi
        
    - name: Upload API Test CTRF Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: api-test-ctrf-results
        path: TestResults/ctrf-api-tests.json
        
    - name: Upload Postman test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: postman-test-results
        path: TestResults/postman-report.html

  cypress-tests:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: true  # Cypress tests are ready
   
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
      
    - name: Restore and build solution
      run: |
        dotnet restore
        dotnet build --no-restore --configuration Release
        
    - name: Start API server
      run: |
        dotnet run --project backend/src/DemoInventory.API --configuration Release &
        echo $! > api.pid
        sleep 15
        curl -f http://localhost:5126/api/products
      env:
        USE_IN_MEMORY_DB: true
        
    - name: Run Cypress tests
      uses: cypress-io/github-action@v6
      with:
        working-directory: tests/e2e
        wait-on: 'http://localhost:5126/api/products'
        wait-on-timeout: 120
        browser: chrome
        headless: true
      continue-on-error: true
        
    - name: Generate CTRF report from Cypress results
      run: |
        cd tests/e2e
        mkdir -p ../../TestResults
        # Move CTRF report to TestResults if it exists
        if [ -f cypress/reports/ctrf-report.json ]; then
          cp cypress/reports/ctrf-report.json ../../TestResults/ctrf-e2e-tests.json
        else
          # Create empty CTRF report if no tests ran or reporter failed
          echo '{"results":{"tool":{"name":"cypress"},"summary":{"tests":0,"passed":0,"failed":0,"skipped":0,"pending":0,"other":0},"tests":[]}}' > ../../TestResults/ctrf-e2e-tests.json
        fi
        
    - name: Stop API server
      if: always()
      run: |
        if [ -f api.pid ]; then
          kill $(cat api.pid) || true
        fi
        
    - name: Upload E2E Test CTRF Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-test-ctrf-results
        path: TestResults/ctrf-e2e-tests.json
        
    - name: Upload Cypress screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: cypress-screenshots
        path: tests/e2e/cypress/screenshots
        
    - name: Upload Cypress videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cypress-videos
        path: tests/e2e/cypress/videos

  # Aggregate CTRF test results
  test-results:
    runs-on: ubuntu-latest
    needs: [build-and-test, postman-tests, cypress-tests]
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Unit Test Results
      uses: actions/download-artifact@v4
      continue-on-error: true
      with:
        name: unit-test-ctrf-results
        path: TestResults/
        
    - name: Download API Test Results
      uses: actions/download-artifact@v4
      continue-on-error: true
      with:
        name: api-test-ctrf-results
        path: TestResults/
        
    - name: Download E2E Test Results
      uses: actions/download-artifact@v4
      continue-on-error: true
      with:
        name: e2e-test-ctrf-results
        path: TestResults/
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        
    - name: Install CTRF tools
      run: npm install -g ctrf
      
    - name: Merge CTRF reports
      run: |
        mkdir -p ctrf-reports
        if [ -f TestResults/ctrf-unit-tests.json ]; then cp TestResults/ctrf-unit-tests.json ctrf-reports/; fi
        if [ -f TestResults/ctrf-api-tests.json ]; then cp TestResults/ctrf-api-tests.json ctrf-reports/; fi
        if [ -f TestResults/ctrf-e2e-tests.json ]; then cp TestResults/ctrf-e2e-tests.json ctrf-reports/; fi
        if [ "$(ls -A ctrf-reports)" ]; then
          ctrf merge ctrf-reports --output merged-ctrf-report.json
        else
          echo '{"results":{"tool":{"name":"merged"},"summary":{"tests":0,"passed":0,"failed":0,"skipped":0,"pending":0,"other":0},"tests":[]}}' > merged-ctrf-report.json
        fi
        
    - name: Install github-actions-ctrf
      run: npm install -g github-actions-ctrf
      
    - name: Publish CTRF Test Results
      run: |
        if [ -f merged-ctrf-report.json ]; then
          github-actions-ctrf merged-ctrf-report.json
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}