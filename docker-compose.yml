services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:15
    container_name: demo-inventory-postgres
    environment:
      - POSTGRES_DB=demo_inventory
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: demo-inventory-api
    ports:
      - "5000:8080"  # Map host port 5000 to container port 8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=demo_inventory;Username=postgres;Password=postgres
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: http://localhost:5000/api
    container_name: demo-inventory-frontend
    ports:
      - "3000:80"  # Map host port 3000 to container nginx port 80
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  # Cypress E2E Tests Service (for Docker-based testing)
  cypress:
    image: cypress/included:13.6.2
    container_name: demo-inventory-cypress
    working_dir: /e2e
    volumes:
      - ./tests/e2e:/e2e
    environment:
      - CYPRESS_API_BASE_URL=http://backend:8080
      - CYPRESS_API_URL=http://backend:8080/api
    networks:
      - app-network
    depends_on:
      - backend
    # Don't run by default - use profiles or explicit service names
    profiles:
      - test

networks:
  app-network:
    driver: bridge

volumes:
  # Volume for PostgreSQL data
  postgres_data:
    driver: local
  # Volume for any persistent data if needed in the future
  app-data:
    driver: local